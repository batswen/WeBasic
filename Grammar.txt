program:    statement (lf statement)*
statement:  identifier "=" orexpr
            identifier "(" (orexpr ("," orexpr)*)? ")"
            "IF" orexpr "THEN" statement ("ELSE" statement)?
            "IF" orexpr lf program lf ("ELSE" program)? "ENDIF"
            "WHILE" orexpr "DO" statement
            "WHILE" orexpr lf program lf "ENDWHILE"
            "FOR" identifier "=" expr "TO" expr ("STEP" expr)? "DO" statement
            "FOR" identifier "=" expr "TO" expr ("STEP" expr)? lf program lf "NEXT"
            "CLS"
            "PRINT" (orexpr ("," orexpr)*)?
            "PRINTLN" (orexpr ("," orexpr)*)?
            "CPRINT" (orexpr ("," orexpr)*)?
            "DUMP"
            "CDUMP"
            "NAMESPACE" identifier lf program lf "ENDNAMESPACE"
            "FUNCTION" identifier "(" (identifier ("," identifier)*)? ")" lf program lf "ENDFUNCTION"
            "RETURN" (orexpr)?

orexpr:     andexpr ("OR" andexpr)*
andexpr:    eqexpr ("AND" eqexpr)*
eqexpr:     glexpr (("=="|"!=") glexpr)*
glexpr:     expr (("<"|"<="|">"|">=") expr)*

expr:       term (("+"|"-") term)*
term:       factor (("*"|"/") factor)*
factor:     ("+"|"-") int|float
            string
            "(" orexpr ")"
            identifier (("[" expr "]")|("(" ")"))?
            list ("[" expr "]")?

string:     """ ([^"]|\\")* """
int:        [0-9]
float:      [0-9] ("." [0-9])+
list:       "[" (orexpr ("," orexpr)*)? "]"
identifier: [a-zA-Z_\$][\$_0-9\p{L}]*
lf:         (":"|"\n")
